const drawSquircle=(ctx,geom,radius,smooth,lineWidth,color)=>{const defaultFill=color;const lineWidthOffset=lineWidth/2;ctx.beginPath();ctx.lineTo(radius,lineWidthOffset);ctx.lineTo(geom.width-radius,lineWidthOffset);ctx.bezierCurveTo(geom.width-radius/smooth,lineWidthOffset,geom.width-lineWidthOffset,radius/smooth,geom.width-lineWidthOffset,radius);ctx.lineTo(geom.width-lineWidthOffset,geom.height-radius);ctx.bezierCurveTo(geom.width-lineWidthOffset,geom.height-radius/smooth,geom.width-radius/smooth,geom.height-lineWidthOffset,geom.width-radius,geom.height-lineWidthOffset);ctx.lineTo(radius,geom.height-lineWidthOffset);ctx.bezierCurveTo(radius/smooth,geom.height-lineWidthOffset,lineWidthOffset,geom.height-radius/smooth,lineWidthOffset,geom.height-radius);ctx.lineTo(lineWidthOffset,radius);ctx.bezierCurveTo(lineWidthOffset,radius/smooth,radius/smooth,lineWidthOffset,radius,lineWidthOffset);ctx.closePath();if(lineWidth){ctx.strokeStyle=defaultFill;ctx.lineWidth=lineWidth;ctx.stroke()}else{ctx.fillStyle=defaultFill;ctx.fill()}};class SquircleClass{static get contextOptions(){return{alpha:true}}static get inputProperties(){return["--squircle-radius","--squircle-smooth","--squircle-outline","--squircle-fill","--squircle-ratio"]}paint(ctx,geom,properties){const customRatio=properties.get("--squircle-ratio");const smoothRatio=10;const distanceRatio=parseFloat(customRatio)?parseFloat(customRatio):1.8;const squircleSmooth=parseFloat(properties.get("--squircle-smooth")*smoothRatio);const squircleRadius=parseInt(properties.get("--squircle-radius"),10)*distanceRatio;const squrcleOutline=parseFloat(properties.get("--squircle-outline"),10);const squrcleColor=properties.get("--squircle-fill").toString().replace(/\s/g,"");const isSmooth=()=>{if(typeof properties.get("--squircle-smooth")[0]!=="undefined"){if(squircleSmooth===0){return 1}return squircleSmooth}else{return 10}};const isOutline=()=>{if(squrcleOutline){return squrcleOutline}else{return 0}};const isColor=()=>{if(squrcleColor){return squrcleColor}else{return"#f45"}};if(squircleRadius<geom.width/2&&squircleRadius<geom.height/2){drawSquircle(ctx,geom,squircleRadius,isSmooth(),isOutline(),isColor())}else{drawSquircle(ctx,geom,Math.min(geom.width/2,geom.height/2),isSmooth(),isOutline(),isColor())}}}if(typeof registerPaint!=="undefined"){registerPaint("squircle",SquircleClass)}